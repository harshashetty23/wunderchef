<?xml version="1.0" encoding="UTF-8"?>


<beans 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter"/>
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
	</bean>
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>
	<context:component-scan base-package="com.wunderchef.api,com.wunderchef.cache" />	
	<mvc:annotation-driven />

 <bean id="wunderChefCacheAdministrator" class="com.wunderchef.cache.WunderChefCacheAdministrator" destroy-method="destroy" lazy-init="false">
	    <constructor-arg index="0">
	        <props>
	            <prop key="cache.memory">true</prop>
	            <prop key="cache.capacity">1000</prop>
	            <prop key="cache.algorithm">com.opensymphony.oscache.base.algorithm.LRUCache</prop>
	        </props>
	    </constructor-arg>
	</bean>
	
	<bean id="CacheService" class="com.wunderchef.cache.CacheService"></bean>
	<bean id="cacheAdmin" class="com.wunderchef.cache.CacheAdmin"></bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/chef_schema" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1" />
	</bean>
	
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<!-- Never enable this next property in production -->
				<!-- prop key="hibernate.hbm2ddl.auto">create</prop -->
				<!-- Enable the next one in development to automagically update your 
					db -->
				<!-- prop key="hibernate.hbm2ddl.auto">update</prop -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.query.substitutions">true 'T', false 'F'</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>

			</props>
		</property>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" lazy-init="true">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<ref local="hibernateProperties" />
		</property>
		<!-- Must references all mapping files. -->
		<property name="annotatedClasses">
			<list>
				<value>com.wunderchef.entity.CuisineMasterEntity</value>
				<value>com.wunderchef.entity.ChefMasterEntity</value>
				<value>com.wunderchef.entity.DishMasterEntity</value>
				</list>
		</property>
	</bean>
	<tx:annotation-driven/>
	<bean id="TransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="searchChefDao" class="com.wunderchef.dao.impl.SearchChefDaoImpl" autowire="byType">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="searchListServiceImpl" class="com.wunderchef.service.SearchListServiceImpl" autowire="byType">
		
	</bean>
	
</beans>